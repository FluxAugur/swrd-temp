# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: edu-etsu-swrd # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10

  # you can overwrite defaults here
  #  stage: dev
  #  region: us-east-1

  stage: ${opt:stage, env:SLS_STAGE, 'dev'}
  region: ${opt:region, env:SLS_REGION, 'us-east-1'}
  profile: ${opt:aws-profile, env:AWS_PROFILE, env:AWS_DEFAULT_PROFILE, 'default'}
  stackName: ${self:service}-${self:provider.stage}
  memorySize: 128
  timeout: 10
  logRetentionInDays: 14
  deploymentBucket:
    name: ${self:provider.environment.DEPLOYMENT_BUCKET_NAME}
    serverSideEncryption: AES256

  # you can add statements to the Lambda function's IAM Role here
  #  iamRoleStatements:
  #    - Effect: "Allow"
  #      Action:
  #        - "s3:ListBucket"
  #      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
  #    - Effect: "Allow"
  #      Action:
  #        - "s3:PutObject"
  #      Resource:
  #        Fn::Join:
  #          - ""
  #          - - "arn:aws:s3:::"
  #            - "Ref" : "ServerlessDeploymentBucket"
  #            - "/*"

  # you can define service wide environment variables here
  #  environment:
  #    variable1: value1

  environment:
    SERVICE_NAME: ${self:service}
    DEPLOYMENT_BUCKET_NAME: ${self:service}-deploys
    SITE_BUCKET_NAME: ${self:service}-${self:provider.stage}

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

# you can add custom configuration properties here
#custom:
#  deploymentBucket:
#    versioning: true
#  encodeEnvObjects:
#    - ONLY_THIS_ENV_OBJECT

functions:
  - "${file(src/handlers/utils/utils.serverless.yml)}"
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

# you can add plugins here

plugins:
  # https://github.com/mikesouza/serverless-deployment-bucket
  - serverless-deployment-bucket
  # https://github.com/arabold/serverless-export-env
  - serverless-export-env
  # https://github.com/dherault/serverless-offline
  - serverless-offline
  # https://github.com/yonomi/serverless-plugin-encode-env-var-objects
  - serverless-plugin-encode-env-var-objects
